import java.io.IOException;

/* Generated By:JJTree: Do not edit this line. ASTForStatement.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
public
class ASTForStatement extends SimpleNode {
	private int headLabel;
	private int tailLabel;
	private int conTarLabel;
	private String name;
	
  public ASTForStatement(int id) {
    super(id);
  }

  public ASTForStatement(Eg2 p, int id) {
    super(p, id);
  }

  public int writeHeadLabel() throws IOException {
	  //useless here
	  
	  //headLabel = genLabel();
	  //continueLabel = headLabel;
	  //content = "@L" + Integer.toString(headLabel) + ": ";
	  //writeInter();
	  return headLabel;
  }
  
  public int genInter(String id, int paraL, int paraR) throws IOException {
	  name = id;
	  tailLabel = genLabel();
	  headLabel = genLabel();
	  breakLabel.add(tailLabel);
	  content = id + " = @t" + Integer.toString(paraL)
			  //+ "\n@t" + Integer.toString(genPara()) + " = @t" + Integer.toString(paraR)
			  //+ "\nif @t" + Integer.toString(paraL) + " > " + "@t" + Integer.toString(paraR)
			  + "\n@L" + Integer.toString(headLabel) + ": " + "if " + id + " > " + "@t" + Integer.toString(paraR)
			  + " goto @L" + Integer.toString(tailLabel)
			  + "\n";
			  //+ "@t" + Integer.toString(paraL) + " = " + "@t" + Integer.toString(paraL) + " + 1\n";
			  
	  writeInter();
	  conTarLabel = genLabel();
	  continueLabel.add(conTarLabel);
	  return para;
  }
  
  public int writeTailLabel() throws IOException {
	  content = "@L" + Integer.toString(conTarLabel) + ": " + name + " = " + name + " + 1\n" 
			  + "goto @L" + Integer.toString(headLabel)
			  + "\n@L" + Integer.toString(tailLabel) + ": ";
	  writeInter();
	  breakLabel.remove(breakLabel.size() - 1);
	  continueLabel.remove(continueLabel.size() - 1);
	  return tailLabel;
  }
}
/* JavaCC - OriginalChecksum=ca57cc63ce44c379797e0b21d4047f63 (do not edit this line) */
